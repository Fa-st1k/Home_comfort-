import json
import telebot
import json
import random
import string
from view import menu_2


def editing_employees():
    with open('the_database.json', 'r') as f:
        data = json.load(f)

    employee_id = input("Введите идентификатор сотрудника, который вы хотите отредактировать:")
    if any(d["ID"] == employee_id for d in data):
        employee = next(d for d in data if d["ID"] == employee_id)
        print("Сведения о сотруднике:")
        print(f"ID: {employee_id}")
        print(f"Имя: {employee['Имя']}")
        print(f"Фамилия: {employee['Фамилия']}")
        print(f"Отчество: {employee['Отчество']}")
        print(f"Возраст: {employee['Возраст']}")
        print(f"желаемое положение: {employee['желаемое положение']}")
        print(f"опыт: {employee['опыт']}")
        while True:
            choice = input("Что бы вы хотели изменить? (Имя, отчество, возраст, желаемая должность, опыт работы, ID):")

            if choice == "Имя":
                new_Name = input("Введите в новый Имя: ")
                employee['Имя'] = new_Name
                print("Имя успешно обновлено.")
            elif choice == "Фамилия":
                new_Surname = int(input("Введите в новый Фамилия: "))
                employee['Фамилия'] = new_Surname
                print("Фамилия успешно обновлено.")
            elif choice == "Отчество":
                new_Middle_name = input("Введите в новый Отчество: ")
                employee['Отчество'] = new_Middle_name
                print("Отчество успешно обновлено.")
            elif choice == "Возраст":
                new_age = input("Введите в новый Возраст: ")
                employee['Возраст'] = new_age
                print("Возраст успешно обновлено.")
            elif choice == "желаемое положение":
                new_desired_position = input("Введите в новый желаемое положение: ")
                employee['желаемое положение'] = new_desired_position
                print("Имя успешно обновлено.")
            elif choice == "опыт":
                new_experience = input("Введите в новый опыт: ")
                employee['опыт'] = new_experience
                print("опыт успешно обновлено.")
            elif choice == "ID":
                new_experience = input("Введите в новый ID: ")
                employee['ID'] = new_experience
                print("ID успешно обновлено.")
            elif choice == "выход":
                break
            else:
                print("Неверный выбор. Пожалуйста, попробуйте снова.")

        with open('the_database.json', 'w') as f:
            json.dump(data, f)
            print("Данные успешно сохранены.")

        while True:
            continue_editing = input("Вы хотите отредактировать что-то еще для этого сотрудника? (да/нет): ")

            if continue_editing == "да":
                choice = input("Что бы вы хотели отредактировать? (Имя / Фамилия / Отчество / возраст / желаемая должность / опыт работы / ID): ")

                if choice == "Имя":
                    new_Name = input("Введите в новый Имя: ")
                    employee['Имя'] = new_Name
                    print("Имя успешно обновлено.")
                elif choice == "Фамилия":
                    new_Surname = int(input("Введите в новый Фамилия: "))
                    employee['Фамилия'] = new_Surname
                    print("Фамилия успешно обновлено.")
                elif choice == "Отчество":
                    new_Middle_name = input("Введите в новый Отчество: ")
                    employee['Отчество'] = new_Middle_name
                    print("Отчество успешно обновлено.")
                elif choice == "Возраст":
                    new_age = input("Введите в новый Возраст: ")
                    employee['Возраст'] = new_age
                    print("Возраст успешно обновлено.")
                elif choice == "желаемое положение":
                    new_desired_position = input("Введите в новый желаемое положение: ")
                    employee['желаемое положение'] = new_desired_position
                    print("Имя успешно обновлено.")
                elif choice == "опыт":
                    new_experience = input("Введите в новый опыт: ")
                    employee['опыт'] = new_experience
                    print("опыт успешно обновлено.")
                elif choice == "ID":
                    new_experience = input("Введите в новый ID: ")
                    employee['ID'] = new_experience
                    print("ID успешно обновлено.")
                elif choice == "выход":
                    break
                else:
                    print("Неверный выбор. Пожалуйста, попробуйте снова.")

                with open('the_database.json', 'w') as f:
                    json.dump(data, f)
                    print("Data saved successfully.")
            elif continue_editing == "нет":
                break
            else:
                print("Неверный выбор. Пожалуйста, попробуйте снова.")

        while True:
            continue_editing_employee = input("Вы хотите отредактировать другого сотрудника? (да/нет): ")

            if continue_editing_employee == "да":
                editing_employees()
                break
            elif continue_editing_employee == "нет":
                break
            else:
                print("Неверный выбор. Пожалуйста, попробуйте снова.")
    else:
        print("Неверный идентификатор сотрудника.")



def get_all_employees():
    with open('the_database.json', 'r') as f:
        employees = json.load(f)

    for employee in employees:
        try:
            print("Имя:", employee['Имя'])
            print("Фамилия:", employee['Фамилия'])
            print("Отчество:", employee['Отчество'])
            print("Возраст:", employee['Возраст'])
            print("желаемое положение:", employee['желаемое положение'])
            print("опыт:", employee['опыт'])
            print("ID:", employee['ID'])
            print()
        except KeyError:
            print("Отсутствующий ключ в данных о сотрудниках:", employee)

def removing_employees(employee_id):
    # Считайте данные из файла
    with open('the_database.json', 'r') as file:
        data = json.load(file)

    # Найдите и удалите сотрудника с указанным идентификатором
    removed_employee = None
    for employee in data:
        if employee['ID'] == str(employee_id):
            removed_employee = employee
            data.remove(employee)
            break

    # Запишите обновленные данные обратно в файл
    with open('the_database.json', 'w') as file:
        json.dump(data, file)
    return removed_employee


def See_everyone_who_wants_to_get_a_job():
    with open('user_data.json', 'r', encoding='utf-8') as file:
        data = json.load(file)

        print(json.dumps(data, indent=4, ensure_ascii=False))   

def Get_everyone_to_work():
    Pass


def fire_employees():
     # Clear the contents of the file
    with open('the_database.json', 'w') as file:
         file.write('[]')

    with open('user_data.json', 'w') as file:
         file.write('[]')











def user():
    n = 1
    Basket = []
    list_menu = ["Капучино", "Американо", "Эспрессо", "Чизкейк", "Крем-суп"]
    while n >= 1 and n < 5:

        def total_price_1():
            global Total_price
            Total_price = Basket.count('Капучино') * 150 + Basket.count('Американо') * 120 + Basket.count(
                'Эспрессо') * 80 + Basket.count('Чизкейк') * 100 + Basket.count('Крем-суп') * 250
            print("Вы приобрели товары на сумму: ", Total_price)

        def menu_1(menu):
            menu_2()
        print(menu_1(1))
        Action_selection = int(input("Введите номер желаемого действия:"))

        def go_to_order_1(go_to_order):
            menu_3 = ("\n─── ⋆⋅☆⋅⋆ ───── ⋆⋅☆⋅⋆ ──\n"
                      "\n 1 - Капучино - 150 рублей"
                      "\n 2 - Американо - 120 рублей"
                      "\n 3 - Эспрессо - 80 рублей "
                      "\n 4 - Чизкейк - 100 рублей "
                      "\n 5 - Крем-суп - 250 рублей"
                      "\n─── ⋆⋅☆⋅⋆ ───── ⋆⋅☆⋅⋆ ──\n")
            print(menu_3)
            go_to_order_2 = int(input("Введите номер товара, который вы хотите заказать:"))

            if go_to_order_2 == 1:
                Basket.append("Капучино")
            elif go_to_order_2 == 2:
                Basket.append('Американо')
            elif go_to_order_2 == 3:
                Basket.append('Эспрессо')
            elif go_to_order_2 == 4:
                Basket.append('Чизкейк')
            elif go_to_order_2 == 5:
                Basket.append('Крем-суп')

        def payment_1(payment):
            total_price_1()
            print(('\n Введите способ оплаты:\n 1 - по карте \n 2 - наличными '))
            sposob_oplaty = int(input())
            if sposob_oplaty == 2:
                Bill_for_payment = int(input("Введите сумму платежа наличными: "))
                if Bill_for_payment > Total_price:
                    print("Вот твоя сдача:", Bill_for_payment - Total_price)
                    print("Спасибо за покупку!")
                elif Bill_for_payment == Total_price:
                    print("Спасибо за покупку!")
                else:
                    print("Вы не дали достаточно денег для оплаты заказа!")
            if sposob_oplaty == 1:
                print("Спасибо за покупку!")

        def cart_1(cart):
            print("─── ⋆⋅☆⋅⋆ ───── ⋆⋅☆⋅⋆ ──")
            print('1 - ', 'Капучино:', Basket.count('Капучино'), " - ", Basket.count('Капучино') * 150)
            print('2 - ', 'Американо:', Basket.count('Американо'), " - ", Basket.count('Американо') * 120)
            print('3 - ', 'Эспрессо:', Basket.count('Эспрессо'), " - ", Basket.count('Эспрессо') * 80)
            print('4 - ', 'Чизкейк:', Basket.count('Чизкейк'), " - ", Basket.count('Чизкейк') * 100)
            print('5 - ', 'Крем-суп:', Basket.count('Крем-суп'), " - ", Basket.count('Крем-суп') * 250)

            total_price_1()
            print("─── ⋆⋅☆⋅⋆ ───── ⋆⋅☆⋅⋆ ──")

        def change_basket():

            change = int(input("Введите порядковый номер того, что вы хотели бы изменить\n "))
            print("Вы хотите изменить номерr", list_menu[change - 1],
                  "?\n 0 - уменьшить , 1 - увеличение")
            number = int(input())
            if number == 0:
                number_1 = int(input("Добавьте число, которое вы хотите уменьшить на:"))
                while number_1 > 0:
                    Basket.remove(list_menu[change - 1])
                    number_1 = number_1 - 1
            elif number == 1:
                number_1 = int(input("Добавьте число, на которое вы хотите увеличить: "))
                while number_1 > 0:
                    Basket.append(list_menu[change - 1])
                    number_1 = number_1 - 1

        def editing_cart_1(editing_cart):
            while True:
                cart_1("корзина")

                go_mane_menu = input("Вы хотите вернуться? если да, напишите (1) \n")
                if int(go_mane_menu) == 1:
                    break
                else:
                    change_basket()


        if Action_selection == 1:
            go_to_order_1("go_to_order")
        elif Action_selection == 2:
            payment_1("payment")
        elif Action_selection == 3:
            cart_1("cart")
        elif Action_selection == 4:
            editing_cart_1("editing_cart")
        elif Action_selection == 5:
            print("До свидания!")
            break



















def Sending_a_job_application():
    TOKEN = '6795222480:AAFBy7UgYqD41qA08cl9mJDdKpx-9eW5IF4'
    bot = telebot.TeleBot(TOKEN)
    user_data = {}

    @bot.message_handler(commands=['start'])
    def start(message):
        bot.send_message(message.chat.id,
                         "Привет! Отправь мне свои данные: Имя, Фамилию, Отчество, Возраст, Желаемое место работы, Стаж и Айди, каждое на новой строке.")

    @bot.message_handler(func=lambda message: True)
    def get_user_data(message):
        chat_id = message.chat.id
        if chat_id not in user_data:
            user_data[chat_id] = {}
            user_data[chat_id]['info'] = message.text
            user_data[chat_id]['code'] = ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))
            bot.send_message(chat_id, f"Ваш уникальный код: {user_data[chat_id]['code']}. Пожалуйста, введите код:")
        else:
            if message.text == user_data[chat_id]['code']:
                data = user_data.pop(chat_id)
                with open('user_data.json', 'a', encoding='utf-8') as file:
                    json.dump(data, file, indent=4, ensure_ascii=False)
                bot.send_message(chat_id, "Данные успешно сохранены!")
            else:
                bot.send_message(chat_id, "Неверный код. Попробуйте еще раз.")

    bot.polling()
