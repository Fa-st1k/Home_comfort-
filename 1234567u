import tkinter as tk
# создание класса
class CoffeeShopApp:
    # инициализация основного окна приложения
    def __init__(self, master):
        self.master = master
        self.master.title("Home comfort")
        self.Basket = []

        self.label = tk.Label(master, text="Добро пожаловать в кофейню!")
        self.label.pack()

        self.button_order = tk.Button(master, text="Заказать", command=self.go_to_order)
        self.button_order.pack()

        self.button_payment = tk.Button(master, text="Оплатить", command=self.payment)
        self.button_payment.pack()

        self.button_cart = tk.Button(master, text="Корзина", command=self.cart)
        self.button_cart.pack()

        self.button_edit_cart = tk.Button(master, text="Редактировать корзину", command=self.edit_cart)
        self.button_edit_cart.pack()

        self.button_exit = tk.Button(master, text="Выход", command=master.quit)
        self.button_exit.pack()

        # Определение размеров экрана
        screen_width = master.winfo_screenwidth()
        screen_height = master.winfo_screenheight()
        # Определение размеров окна
        window_width = 300
        window_height = 200
        # Вычисление координат для расположения окна по центру
        x = (screen_width // 2) - (window_width // 2)
        y = (screen_height // 2) - (window_height // 2)
        # Установка положения окна
        master.geometry(f"{window_width}x{window_height}+{x}+{y}")

    # общая стоимость товаров в корзине
    def total_price(self):
        Total_price = self.Basket.count('Капучино') * 150 + self.Basket.count('Американо') * 120 + \
                      self.Basket.count('Эспрессо') * 80 + self.Basket.count('Чизкейк') * 100 + \
                      self.Basket.count('Крем-суп') * 250
        return Total_price

    # добавление выбранного товара в корзину.
    def go_to_order(self):
        self.menu_window = tk.Toplevel(self.master)
        self.menu_window.title("Меню заказа")

        self.menu_label = tk.Label(self.menu_window, text="Выберите товар для заказа:")
        self.menu_label.pack()

        self.list_menu = ["Капучино", "Американо", "Эспрессо", "Чизкейк", "Крем-суп"]
        self.menu_buttons = []
        for item in self.list_menu:
            button = tk.Button(self.menu_window, text=item, command=lambda i=item: self.add_to_basket(i))
            button.pack()
            self.menu_buttons.append(button)

        self.close_button = tk.Button(self.menu_window, text="Закрыть", command=self.menu_window.destroy)
        self.close_button.pack()

    def add_to_basket(self, item):
        self.Basket.append(item)

    def edit_cart(self):
        edit_window = tk.Toplevel(self.master)
        edit_window.title("Редактировать корзину")

        self.edit_label = tk.Label(edit_window, text="Выберите товар для редактирования:")
        self.edit_label.pack()

        self.edit_buttons = []
        for item in self.Basket:
            button = tk.Button(edit_window, text=f"{item} ({self.Basket.count(item)})",
                               command=lambda i=item: self.change_quantity(i, edit_window))
            button.pack()
            self.edit_buttons.append(button)

        self.close_button = tk.Button(edit_window, text="Закрыть", command=edit_window.destroy)
        self.close_button.pack()
    def change_quantity(self, item, edit_window):
        change_window = tk.Toplevel(edit_window)
        change_window.title(f"Изменить количество {item}")

        self.change_label = tk.Label(change_window, text=f"Текущее количество: {self.Basket.count(item)}")
        self.change_label.pack()

        self.add_button = tk.Button(change_window, text="Увеличить", command=lambda: self.add_item(item))
        self.add_button.pack()

        self.remove_button = tk.Button(change_window, text="Уменьшить", command=lambda: self.remove_item(item))
        self.remove_button.pack()

    def add_item(self, item):
        self.Basket.append(item)
        self.refresh_edit_window()

    def remove_item(self, item):
        self.Basket.remove(item)
        self.refresh_edit_window()

    def refresh_edit_window(self):
        for button in self.edit_buttons:
            button.destroy()

        for item in self.Basket:
            button = tk.Button(self.edit_window, text=f"{item} ({self.Basket.count(item)})",
                               command=lambda i=item: self.change_quantity(i, self.edit_window))
            button.pack()
            self.edit_buttons.append(button)

    # оплата
    def payment(self):
        payment_window = tk.Toplevel(self.master)
        payment_window.title("Оплата")

        total_price = self.total_price()
        self.payment_label = tk.Label(payment_window, text=f"Общая сумма к оплате: {total_price} руб.")
        self.payment_label.pack()

        self.payment_method_label = tk.Label(payment_window, text="Выберите метод оплаты:")
        self.payment_method_label.pack()

        self.payment_method_var = tk.StringVar()
        self.payment_method_var.set("1")

        self.payment_method_radio1 = tk.Radiobutton(payment_window, text="По карте", variable=self.payment_method_var,
                                                    value="1")
        self.payment_method_radio1.pack()

        self.payment_method_radio2 = tk.Radiobutton(payment_window, text="Наличными", variable=self.payment_method_var,
                                                    value="2")
        self.payment_method_radio2.pack()

        self.payment_button = tk.Button(payment_window, text="Оплатить", command=self.make_payment)
        self.payment_button.pack()

    # оплата
    def make_payment(self):
        total_price = self.total_price()
        payment_method = self.payment_method_var.get()

        if payment_method == "1":
            print("Оплата по карте")
        elif payment_method == "2":
            Bill_for_payment = int(input("Введите сумму платежа наличными: "))
            if Bill_for_payment > total_price:
                print("Ваша сдача:", Bill_for_payment - total_price)
            elif Bill_for_payment == total_price:
                print("Спасибо за покупку!")
            else:
                print("Вы не дали достаточно денег для оплаты заказа!")

    # корзина
    def cart(self):
        cart_window = tk.Toplevel(self.master)
        cart_window.title("Корзина")

        self.cart_label = tk.Label(cart_window, text="Содержимое корзины:")
        self.cart_label.pack()

        # Создаем словарь для хранения товаров и их количества
        cart_items = {}
        for item in self.Basket:
            if item in cart_items:
                cart_items[item] += 1
            else:
                cart_items[item] = 1

        # Выводим название товара и его количество
        for item, quantity in cart_items.items():
            label = tk.Label(cart_window, text=f"{item}: {quantity}")
            label.pack()

        self.total_price_label = tk.Label(cart_window, text=f"Общая сумма: {self.total_price()} руб.")
        self.total_price_label.pack()

    def edit_cart(self):
        edit_window = tk.Toplevel(self.master)
        edit_window.title("Редактировать корзину")

        # Создаем словарь для хранения товаров и их количества
        cart_items = {}
        for item in self.Basket:
            if item in cart_items:
                cart_items[item] += 1
            else:
                cart_items[item] = 1

        # Создаем кнопки для редактирования количества товаров
        for item, quantity in cart_items.items():
            button = tk.Button(edit_window, text=f"{item} ({quantity})",
                               command=lambda i=item: self.change_quantity(i, edit_window))
            button.pack()

        self.close_button = tk.Button(edit_window, text="Закрыть", command=edit_window.destroy)
        self.close_button.pack()


# Создание основного окна
root = tk.Tk()
app = CoffeeShopApp(root)
root.mainloop()
